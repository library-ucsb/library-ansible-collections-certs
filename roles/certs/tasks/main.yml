---
# tasks file for roles/certs

- name: create root certificate storage directory
  file:
    path: "{{ certs_global.cert_storage_path }}"
    state: directory
    mode: 0700


- name: create subdirectory for each certificate
  file:
    path: "{{ certs_global.cert_storage_path }}/{{ item.name }}"
    state: directory
  loop: "{{ certificates }}"


- name: generate openssl private keys
  community.crypto.openssl_privatekey:
    path: "{{ certs_global.cert_storage_path }}/{{ item.name }}/{{ item.cert.cn }}.private.pem"
    size: "{{ certs_global.key_size }}"
    passphrase: "{{ item.passphrase | default(omit) }}"
    cipher: "{{ item.cipher | default(omit) }}"
    backup: yes
  loop: "{{ certificates }}"


- name: generate certificate signing requests
  community.crypto.openssl_csr:
    path: "{{ certs_global.cert_storage_path }}/{{ item.name }}/{{ item.cert.cn }}.csr"
    privatekey_path: "{{ certs_global.cert_storage_path }}/{{ item.name }}/{{ item.cert.cn }}.private.pem"
    privatekey_passphrase: "{{ item.passphrase | default(omit) }}"
    subject_alt_name: "{{ item.cert.sans | map('regex_replace', '^', 'DNS:') | list }}"
    common_name: "{{ item.cert.cn }}"
    email_address: "{{ certs_global.email }}"
    organizational_unit_name: "{{ certs_global.common.certificate.ou }}"
    country_name: "{{ certs_global.common.certificate.country }}"
    locality_name: "{{ certs_global.common.certificate.locality }}"
    state_or_province_name: "{{ certs_global.common.certificate.state }}"
  loop: "{{ certificates }}"


